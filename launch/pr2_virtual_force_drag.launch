<launch>
  <arg name="gui" default="false" />
  <arg name="larm" default="true" />
  <arg name="look" default="true" />    
  <arg name="safe" default="true" />
  <arg name="input_file" default="sample_pr2_pull_arm.yaml"/>
  
  <arg if="$(arg larm)" name="target_arm" value="larm" />
  <arg unless="$(arg larm)" name="target_arm" value="rarm" />
  <!-- <arg if="$(arg larm)" name="wrench_topic" value="/left_endeffector/wrench_transformed" /> -->
  <!-- <arg unless="$(arg larm)" name="wrench_topic" value="/right_endeffector/wrench_transformed" /> -->
  <arg if="$(arg larm)" name="wrench_topic" value="/left_endeffector/wrench_smoothened" />
  <arg unless="$(arg larm)" name="wrench_topic" value="/right_endeffector/wrench_smoothened" />

  <arg if="$(arg safe)" name="vel_topic" value="/input_vel" />
  <!-- <arg if="$(arg safe)" name="vel_topic" value="/dummy_vel" /> -->
  <arg unless="$(arg safe)" name="vel_topic" value="/base_controller/cmd_vel" />

  <!-- <include file="$(find virtual_force_publisher)/launch/dualarm_virtual_force_publisher.launch" /> -->

  <group ns="left_endeffector" >
    <node name="transform_wrench"
          pkg="teach_spot" type="transform_wrench.py"
          output="screen" >
      <remap from="~input" to="wrench" />
      <remap from="~output" to="wrench_transformed" />
      <rosparam>
        target_frame_id: base_footprint
      </rosparam>
    </node>

    <node name="smooth_wrench"
          pkg="virtual_force_drag" type="smooth_wrench.py"
          output="screen" >
      <remap from="~input" to="wrench_transformed" />
      <remap from="~output" to="wrench_smoothened" />
      <rosparam>
        length: 10
      </rosparam>
    </node>
  </group>

  <group ns="right_endeffector" >
    <node name="transform_wrench"
          pkg="teach_spot" type="transform_wrench.py"
          output="screen" >
      <remap from="~input" to="wrench" />
      <remap from="~output" to="wrench_transformed" />
      <rosparam>
        target_frame_id: base_footprint
      </rosparam>
    </node>
    <node name="smooth_wrench"
          pkg="virtual_force_drag" type="smooth_wrench.py"
          output="screen" >
      <remap from="~input" to="wrench_transformed" />
      <remap from="~output" to="wrench_smoothened" />
      <rosparam>
        length: 10
      </rosparam>
    </node>

  </group>

  <node pkg="roseus" type="roseus" name="pull_arm"
        args="$(find virtual_force_drag)/euslisp/pull-arm-moving-average.l"
        output="screen">
    <param name="vel_topic" value="$(arg vel_topic)"/>
    <rosparam subst_value="true">
      robot: pr2
      target_arm: $(arg target_arm)
      wrench_topic: $(arg wrench_topic)
      joint_topic: /joint_states
      input_file: $(find virtual_force_drag)/config/$(arg input_file)
    </rosparam>
  </node>

  <group if="$(arg look)" >
    <node pkg="roseus" type="roseus" name="look"
          args="$(find virtual_force_drag)/euslisp/pr2-look.l" >
      <rosparam subst_value="true">
        wrench_topic: $(arg wrench_topic)
        input_file: $(find virtual_force_drag)/config/$(arg input_file)
      </rosparam>
    </node>
  </group>
  
  <group if="$(arg gui)" >
    <node name="rviz"
          pkg="rviz" type="rviz"
          args="-d $(find hand_navigation_pr2)/sample/config/wrench_transform.rviz">
    </node>
  </group>

</launch>
