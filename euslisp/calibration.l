(defun wrenchstamped-to-list (wrench)
  (let ((force (send (send wrench :wrench) :force)))
    (list (send force :x) (send force :y)  (send force :z))))

(defun force-calibration ()
  (let (zero x-pull y-pull)
    (send *ri* :speak-jp "キャリブレーションをします")
    (send *ri* :speak-jp "手に触れないでください" :wait t)
    (send *ri* :speak-jp "さん" :wait t)
    (ros::duration-sleep 0.5)
    (send *ri* :speak-jp "に" :wait t)
    (ros::duration-sleep 0.5)
    (send *ri* :speak-jp "いち")
    (let ((sum (list 0 0 0)) tmp (sample 25))
      (dotimes (i sample)
	(ros::ros-info "~A" tmp)	
        (setq tmp (wrenchstamped-to-list (one-shot-subscribe "/endeffector/wrench_transformed" geometry_msgs::WrenchStamped)))
        (setq sum (list (+ (elt sum 0) (elt tmp 0))
                        (+ (elt sum 1) (elt tmp 1))
                        (+ (elt sum 2) (elt tmp 2)))))
      (setq zero (list (/ (elt sum 0) sample)
                       (/ (elt sum 1) sample)
                       (/ (elt sum 2) sample)))
      (ros::ros-info "zero:~A" zero))
    
    (send *ri* :speak-jp "前にひいてください" :wait t)
    (let ((sum 0) (tmp (elt zero 0)) (sample 20))
      (send *ri* :speak-jp "さん" :wait t)
      (ros::duration-sleep 0.5)
      (send *ri* :speak-jp "に")
      (dotimes (i (floor (/ sample 2)))
        (ros::ros-info "~A" tmp) 	
    	(setq msg (one-shot-subscribe "/endeffector/wrench_transformed" geometry_msgs::WrenchStamped ))
        (setq tmp (elt (wrenchstamped-to-list msg) 0))
        (setq sum (+ sum tmp)))
      (ros::ros-info "info2")    
      (send *ri* :speak-jp "いち")
      (dotimes (i (ceiling (/ sample 2)))
	(ros::ros-info "~A" tmp)	
    	(setq msg (one-shot-subscribe "/endeffector/wrench_transformed" geometry_msgs::WrenchStamped ))
        (setq tmp (elt (wrenchstamped-to-list msg) 0))
        (setq sum (+ sum tmp)))
      (setq x-pull (list (/ sum sample) 0)))

    (send *ri* :speak-jp "後ろに引いてください" :wait t)
    (let ((sum 0) (tmp (elt zero 0)) (sample 20))
      (send *ri* :speak-jp "さん" :wait t)
      (ros::duration-sleep 0.5)
      (send *ri* :speak-jp "に")
      (dotimes (i (floor (/ sample 2)))
        (ros::ros-info "~A" tmp)
    	(setq msg (one-shot-subscribe "/endeffector/wrench_transformed" geometry_msgs::WrenchStamped ))
        (setq tmp (elt (wrenchstamped-to-list msg) 0))
        (setq sum (+ sum tmp)))
      (ros::ros-info "info2")    
      (send *ri* :speak-jp "いち")
      (dotimes (i (ceiling (/ sample 2)))
        (ros::ros-info "~A" tmp)	
    	(setq msg (one-shot-subscribe "/endeffector/wrench_transformed" geometry_msgs::WrenchStamped ))
        (setq tmp (elt (wrenchstamped-to-list msg) 0))
        (setq sum (+ sum tmp)))
      (setq x-pull (list (elt x-pull 0) (/ sum sample)))
      (ros::ros-info "x-:~A" x-pull))

    (send *ri* :speak-jp "左に引いてください" :wait t)
    (let ((sum 0) (tmp (elt zero 1)) (sample 20))
      (send *ri* :speak-jp "さん" :wait t)
      (ros::duration-sleep 0.5)
      (send *ri* :speak-jp "に")
      (dotimes (i (floor (/ sample 2)))
        (ros::ros-info "~A" tmp) 	
    	(setq msg (one-shot-subscribe "/endeffector/wrench_transformed" geometry_msgs::WrenchStamped ))
        (setq tmp (elt (wrenchstamped-to-list msg) 1))
        (setq sum (+ sum tmp)))
      (ros::ros-info "info2")    
      (send *ri* :speak-jp "いち")
      (dotimes (i (ceiling (/ sample 2)))
        (ros::ros-info "~A" tmp)	
    	(setq msg (one-shot-subscribe "/endeffector/wrench_transformed" geometry_msgs::WrenchStamped ))
        (setq tmp (elt (wrenchstamped-to-list msg) 1))
        (setq sum (+ sum tmp)))
      (setq y-pull (list (/ sum sample) 0)))

    (send *ri* :speak-jp "右に引いてください" :wait t)
    (let ((sum 0) (tmp (elt zero 1)) (sample 20))
      (send *ri* :speak-jp "さん" :wait t)
      (ros::duration-sleep 0.5)
      (send *ri* :speak-jp "に")
      (dotimes (i (floor (/ sample 2)))
        (ros::ros-info "~A" tmp) 	
    	(setq msg (one-shot-subscribe "/endeffector/wrench_transformed" geometry_msgs::WrenchStamped ))
        (setq tmp (elt (wrenchstamped-to-list msg) 1))
        (setq sum (+ sum tmp)))
      (ros::ros-info "info2")    
      (send *ri* :speak-jp "いち")
      (dotimes (i (ceiling (/ sample 2)))
        (ros::ros-info "~A" tmp)	
    	(setq msg (one-shot-subscribe "/endeffector/wrench_transformed" geometry_msgs::WrenchStamped ))
        (setq tmp (elt (wrenchstamped-to-list msg) 1))
        (setq sum (+ sum tmp)))
      (setq y-pull (list (elt y-pull 0) (/ sum sample)))
      (ros::ros-info "y-pull:~A" y-pull))
        
    (send *ri* :speak-jp "終了しました")
    (list zero x-pull y-pull)))
